{"version":3,"sources":["components/Contacts/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","components/Form/Form.js","components/Contacts/ContactItem/ContactItem.js","components/Contacts/Contacts.js","components/Filter/Filter.js","components/App/App.js","index.js","components/Form/Form.module.css","components/Contacts/Contacts.module.css"],"names":["module","exports","Form","state","name","number","handleNameChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","formReset","randomId","uuidv4","this","className","style","formSection","formLabel","onChange","type","pattern","title","required","formBtn","React","Component","ContactItem","contact","onClick","contactsButton","id","Contacts","contacts","onDelete","contactsList","map","Filter","filter","propType","PropTypes","func","isRequired","string","App","formSubmitHandler","newContact","find","alert","prevState","changeFilter","currentTarget","getVisibleContact","normalizedFilter","toLowerCase","includes","deleteContact","contactId","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cff6563e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsButton\":\"ContactItem_contactsButton__2Y3oo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsHead\":\"Filter_contactsHead__3nUmg\"};","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport style from \"./Form.module.css\";\n\nclass Form extends React.Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n  handleNameChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n    this.formReset();\n  };\n  formReset = () => {\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n  randomId = uuidv4();\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={style.formSection}>\n        <label className={style.formLabel}>\n          Name{\" \"}\n          <input\n            onChange={this.handleNameChange}\n            value={this.state.name}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n\n        <label className={style.formLabel}>\n          Phone{\" \"}\n          <input\n            onChange={this.handleNameChange}\n            value={this.state.number}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять из цифер и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n\n        <button type=\"submit\" className={style.formBtn}>\n          Save\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import PropTypes from \"prop-types\";\nimport style from \"./ContactItem.module.css\";\n\nconst ContactItem = ({ contact, onClick }) => {\n  return (\n    <li className=\"\">\n      <p className=\"\">{contact.name}:</p>\n      <p>{contact.number}</p>\n      <button\n        className={style.contactsButton}\n        onClick={() => onClick(contact.id)}\n      >\n        delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport style from \"./Contacts.module.css\";\nimport ContactItem from \"./ContactItem/ContactItem\";\n\nclass Contacts extends React.Component {\n  static propTypes = {\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n      })\n    ),\n    onDelete: PropTypes.func.isRequired,\n  };\n  render() {\n    const { contacts, onDelete } = this.props;\n    return (\n      <section className={style.contacts}>\n        <ul className={style.contactsList}>\n          {contacts.map((contact) => (\n            <ContactItem\n              key={contact.id}\n              contact={contact}\n              onClick={onDelete}\n            />\n          ))}\n        </ul>\n      </section>\n    );\n  }\n}\n\nexport default Contacts;\n","import PropTypes from \"prop-types\";\nimport style from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={style.filter}>\n      Find contact by name{\" \"}\n      <input\n        type=\"text\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        value={value}\n        onChange={onChange}\n      ></input>\n    </label>\n  );\n};\n\nFilter.propType = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\nexport default Filter;\n","import \"./App.css\";\nimport React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Form from \"../Form/Form\";\nimport Contacts from \"../Contacts/Contacts\";\nimport Filter from \"../Filter/Filter\";\n\nclass App extends React.Component {\n  state = {\n    contacts: [\n      // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: \"\",\n  };\n\n  formSubmitHandler = ({ name, number }) => {\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    if (\n      this.state.contacts.find((contact) => contact.name === newContact.name)\n    ) {\n      alert(`${newContact.name} is already in contacts.`);\n      return;\n    }\n    this.setState((prevState) => ({\n      contacts: [{ ...newContact }, ...prevState.contacts],\n    }));\n    // console.log(this.state.contacts);\n  };\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n  getVisibleContact = () => {\n    const normalizedFilter = this.state.filter.toLowerCase();\n    return this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n  render() {\n    return (\n      <section className=\"phonebook\">\n        <h1>Phonebook</h1>\n        <Form onSubmit={this.formSubmitHandler} />\n        <h2 className=\"contactsHead\">Contacts </h2>\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\n        <Contacts\n          contacts={this.getVisibleContact()}\n          onDelete={this.deleteContact}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSection\":\"Form_formSection__zuylk\",\"formLabel\":\"Form_formLabel__2Xdxo\",\"formBtn\":\"Form_formBtn__3Wv1P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"Contacts_contactsList__PV0yP\"};"],"sourceRoot":""}